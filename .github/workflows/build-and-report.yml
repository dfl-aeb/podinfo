name: Build and Push (GHCR)

on:
  push:
    branches: [master, main]
    paths-ignore: ["**.md", "LICENSE", "charts/**"]
  pull_request:
    branches: [master, main]
    paths-ignore: ["**.md", "LICENSE", "charts/**"]

permissions:
  contents: write
  packages: write

env:
  IMAGE_NAME: podinfo
  REGISTRY: ghcr.io

jobs:
  docker:
    name: Build and push container # Codefresh reporting disabled
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare
        id: prep
        run: echo "short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            # kurzer Commit-Tag
            type=raw,value=sha-${{ steps.prep.outputs.short }}
            # PR-Tag nur bei PR-Events
            type=raw,value=pr-${{ github.event.pull_request.number }}-sha-${{ steps.prep.outputs.short }},enable=${{ github.event_name == 'pull_request' }}
            # Branch-/Tag-Labels
            type=ref,event=branch
            type=ref,event=tag
            # latest nur auf default-Branches
            # temporär auskomment, für harness pipeline test
            # type=raw,value=latest,enable=${{ github.ref_name == 'master' || github.ref_name == 'main' }}

      - name: Build & push (push + PR aus gleichem Repo)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.xx
          # Pushe auf Push-Events ODER PRs aus demselben Repo (keine Forks)
          push: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository }}
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
            REVISION=${{ github.sha }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Compute image ref (used for Codefresh report)
        id: imageref
        shell: bash
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "value=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.pull_request.number }}-sha-${{ steps.prep.outputs.short }}" >> "$GITHUB_OUTPUT"
          else
            echo "value=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:sha-${{ steps.prep.outputs.short }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Base64 Dockerfile (optional)
        id: df
        shell: bash
        run: |
          if command -v base64 >/dev/null 2>&1; then
            echo "content=$(base64 -w0 Dockerfile)" >> "$GITHUB_OUTPUT"
          else
            echo "content=" >> "$GITHUB_OUTPUT"
          fi
