name: Build, Push (GHCR) and Report to Codefresh

on:
  push:
    branches: [master, main]
    paths-ignore:
      - "**.md"
      - "LICENSE"
  pull_request:
    branches: [master, main]

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: podinfo
  REGISTRY: ghcr.io

jobs:
  docker:
    name: Build and push container, then report to Codefresh
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare
        id: prep
        run: |
          echo "short=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=sha-${{ steps.prep.outputs.short }}
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.ref_name == 'master' || github.ref_name == 'main' }}

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.xx
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64
          build-args: |
            REVISION=${{ github.sha }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Compute image ref (sha tag)
        id: imageref
        run: echo "value=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:sha-${{ steps.prep.outputs.short }}" >> "$GITHUB_OUTPUT"

      - name: Base64 Dockerfile (optional)
        id: df
        shell: bash
        run: |
          if command -v base64 >/dev/null 2>&1; then
            echo "content=$(base64 -w0 Dockerfile)" >> "$GITHUB_OUTPUT"
          else
            echo "content=" >> "$GITHUB_OUTPUT"
          fi

      - name: Compute Jira message
        id: jira
        shell: bash
        run: |
          msg="${{ github.event.head_commit.message }}"
          if [ -z "${msg}" ]; then
            msg="${{ github.ref_name }}"
          fi
          echo "message=${msg}" >> "$GITHUB_OUTPUT"

      - name: Report to Codefresh (enrich image)
        if: ${{ github.event_name != 'pull_request' }}
        uses: codefresh-io/codefresh-report-image@latest
        with:
          CF_API_KEY: ${{ secrets.CODEFRESH_API_KEY }}
          CF_RUNTIME_NAME: juu-wsl-codefresh
          CF_CONTAINER_REGISTRY_INTEGRATION: ghcr-dfl-aeb
          CF_ISSUE_TRACKING_INTEGRATION: jira-dfl-test
          CF_JIRA_MESSAGE: ${{ steps.jira.outputs.message }}
          CF_JIRA_PROJECT_PREFIX: codefresh-poc
          CF_IMAGE: ${{ steps.imageref.outputs.value }}
          CF_GIT_BRANCH: ${{ github.ref_name }}
          # CF_DOCKERFILE_CONTENT is optional and may not be supported by this action version
